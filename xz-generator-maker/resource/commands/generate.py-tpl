import os
import shutil

import typer
from rich.prompt import Prompt
from jinja2 import Environment, FileSystemLoader

from .utils import get_root_path, get_basic_path, get_parent_path, find_file_by_name

app = typer.Typer()


@app.command('generate')
def generate():

{% for info in modelConfig.get('models') %}
    {{ info.fieldName }} = Prompt.ask('{{ info.description }}')
{% endfor %}

    # 1.复制内容
    demo_path = os.path.join(get_root_path(), 'xz-generator-demo-projects/acm-template')
    dest_path = os.path.join(get_basic_path(), 'acm-template')

    try:
        # 如果目标文件夹不存在，则创建
        if not os.path.exists(dest_path):
            os.makedirs(dest_path)

        # 使用 shutil.copytree 复制整个文件夹
        shutil.copytree(demo_path, dest_path, dirs_exist_ok=True)  # Python 3.8+
        print(f"已成功复制 {demo_path} 到 {dest_path}")
    except Exception as e:
        print(f"复制文件夹时出错: {e}")

    # 2.替换模板内容
    env = Environment(loader=FileSystemLoader(get_parent_path()))
    template = env.get_template('templates/MainTemplate.java-tpl')
    output = template.render({'author': author, 'loop': bool(loop), 'output_text': output_text})

    file_path = find_file_by_name(dest_path, 'MainTemplate.java')
    with open(file_path[0], 'w', encoding='utf8') as f:
        f.write(output)
